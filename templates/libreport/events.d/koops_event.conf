# Analyze
EVENT=post-create analyzer=Kerneloops
        # >> instead of > is due to bugzilla.redhat.com/show_bug.cgi?id=854266
        abrt-action-analyze-oops &&
        dmesg >>dmesg &&
        {
        # action-analyze-oops tries to save kernel version,
        # but for some oopses it can't do that (e.g. MCEs).
        # If it failed, try to extract version from dmesg:
        test -f kernel ||
            {
            k=`sed -n '/Linux version/ s/.*Linux version \([^ ]*\) .*/\1/p' dmesg | tail -n1`
            test "$k" != "" && printf "%s" "$k" >kernel
            true   # ignore possible failures in previous command
            }
        } &&
        abrt-action-save-kernel-data &&
        # Do not fail the event (->do not delete problem dir)
        # if check-oops-for-hw-error exits nonzero:
        { abrt-action-check-oops-for-hw-error || true; }

# If you want behavior similar to one provided by kerneloops daemon
# distributed by kerneloops.org - that is, if you want
# oopses to be reported automatically and immediately without
# user interaction, uncomment this line:
EVENT=post-create analyzer=Kerneloops
        reporter-kerneloops

<% if scope['abrt::report_Bugzilla'] -%>
<%= scope.function_template(['abrt/fragments/report_Bugzilla.erb']) %>
<% end -%>

<% if scope['abrt::report_uReport'] -%>
<%= scope.function_template(['abrt/fragments/report_uReport.erb']) %>
<% end -%>

<% if scope['abrt::report_gui'] -%>
<%= scope.function_template(['abrt/fragments/report_gui.erb']) %>
<% end -%>

<% if scope['abrt::report_cli'] -%>
<%= scope.function_template(['abrt/fragments/report_cli.erb']) %>
<% end -%>
