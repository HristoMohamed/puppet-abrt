# Enable this if you want abrtd to auto-unpack crashdump tarballs which appear
# in this directory (for example, uploaded via ftp, scp etc).
# Note: you must ensure that whatever directory you specify here exists
# and is writable for abrtd. abrtd will not create it automatically.
#
WatchCrashdumpArchiveDir = <%= scope['abrt::watch_crashdump_archive_dir'] %>

# Max size for crash storage [MiB] or 0 for unlimited
#
MaxCrashReportsSize = <%= scope['abrt::max_crash_reports_size'] %>

# Specify where you want to store coredumps and all files which are needed for
# reporting. (default:/var/spool/abrt)
#
# Changing dump location could cause problems with SELinux. See man abrt_selinux(8).
#
DumpLocation = <%= scope['abrt::dump_location'] %>

# If you want to automatically clean the upload directory you have to tweak the
# selinux policy.
#
DeleteUploaded = <%= scope['abrt::delete_uploaded'] %>

# A name of event which is run automatically after problem's detection. The
# event should perform some fast analysis and print out THANKYOU message if the
# problem is konwn.
#
# In order to run this event automatically after detection, the
# AutoreportingEnabled option must be configured to 'yes'
#
# Default value: submit_uReport
#
AutoreportingEvent = <%= scope['abrt::autoreporting_event'] %>

# Enables automatic running of the event configured in AutoreportingEvent option.
#
AutoreportingEnabled = <%= scope['abrt::autoreporting_enabled'] %>

# Disable this option if you want to allow regular users to have file system
# rights to read the problem data stored in DumpLocation.
#
# Caution:
# THE PROBLEM DATA CONTAINS EXCERPTS OF /var/log/messages, dmesg AND sosreport
# data GENERATED BY abrtd UNDER THE USER root.
#
PrivateReports = <%= scope['abrt::private_reports'] %>
