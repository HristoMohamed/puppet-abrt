# Configuration file for CCpp hook

# CCpp hook writes its template to the "/proc/sys/kernel/core_pattern" file
# and stores the original template in the "/var/run/abrt/saved_core_pattern"
# file. If you want CCpp hook to create a core dump file named according to
# the original template as well, set 'MakeCompatCore' to 'yes'.
# If the original template string starts with "|", the string "core" is used
# instead of the template.
# For more information about naming core dump files see 'man 5 core'.

# If you also want to dump file named "core"
# in crashed process' current dir, set to "yes"
MakeCompatCore = <%= scope['abrt::addon::ccpp::makecompatcore'] %>

# Do you want a copy of crashed binary be saved?
# (useful, for example, when _deleted binary_ segfaults)
SaveBinaryImage = <%= scope['abrt::addon::ccpp::savebinaryimage'] %>

# When this option is set to 'yes', core backtrace is generated
# from the memory image of the crashing process. Only the crash
# thread is present in the backtrace.
CreateCoreBacktrace = <%= scope['abrt::addon::ccpp::createcorebacktrace'] %>

# Save full coredump? If set to 'no', coredump won't be saved
# and you won't be able to report the crash to Bugzilla. Only
# useful with CreateCoreBacktrace set to 'yes'. Please
# note that if this option is set to 'no' and MakeCompatCore
# is set to 'yes', the core is still written to the current
# directory.
SaveFullCore = <%= scope['abrt::addon::ccpp::savefullcore'] %>

# Used for debugging the hook
VerboseLog = <%= scope['abrt::addon::ccpp::verboselog'] %>

# Specify where you want to store debuginfos (default: /var/cache/abrt-di)
#
DebuginfoLocation = <%= scope['abrt::addon::ccpp::debuginfo_location'] %>

# ABRT will process only crashes of either allowed users or users who are
# members of allowed group. If no allowed users nor allowed group are specified
# ABRT will process crashes of all users.
#
<% unless [nil, :undefined, :undef, ''].include?(scope['abrt::addon::ccpp::allowed_users']) -%>
AllowedUsers = <%= scope['abrt::addon::ccpp::allowed_users'] %>
<% end -%>
<% unless [nil, :undefined, :undef, ''].include?(scope['abrt::addon::ccpp::allowed_groups']) -%>
AllowedGroups = <%= scope['abrt::addon::ccpp::allowed_groups'] %>
<% end -%>
